"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_src_utils_mockCMSService_ts"],{

/***/ "(app-pages-browser)/./src/utils/mockCMSService.ts":
/*!*************************************!*\
  !*** ./src/utils/mockCMSService.ts ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   mockCMSService: () => (/* binding */ mockCMSService)\n/* harmony export */ });\n// Mock CMS Service - Fallback when Edge Function is not available\n// Default data factories\nconst createDefaultSettings = ()=>({\n        siteName: \"Quang Dũng Japanese Center\",\n        siteDescription: \"Learn Japanese with expert teachers\",\n        siteUrl: \"https://Quang Dũng-center.vn\",\n        contactEmail: \"info@Quang Dũng-center.vn\",\n        contactPhone: \"(028) 3825 1234\",\n        contactAddress: \"123 Nguyễn Huệ, Quận 1, TP. Hồ Chí Minh\",\n        socialLinks: {\n            facebook: \"\",\n            youtube: \"\",\n            instagram: \"\",\n            twitter: \"\"\n        },\n        seoSettings: {\n            defaultTitle: \"Quang Dũng Japanese Center - Learn Japanese Online\",\n            defaultDescription: \"Learn Japanese with our expert teachers. Online courses, tests, and more.\",\n            keywords: [\n                \"japanese\",\n                \"learn\",\n                \"language\",\n                \"course\"\n            ],\n            googleAnalytics: \"\",\n            googleTagManager: \"\"\n        },\n        emailSettings: {\n            fromName: \"Quang Dũng Japanese Center\",\n            fromEmail: \"noreply@Quang Dũng-center.vn\",\n            replyTo: \"support@Quang Dũng-center.vn\"\n        },\n        themeSettings: {\n            primaryColor: \"#dc2626\",\n            secondaryColor: \"#fef2f2\",\n            accentColor: \"#fee2e2\",\n            fontFamily: \"Inter\"\n        }\n    });\nconst createDefaultPages = ()=>[\n        {\n            id: \"home-page\",\n            title: \"Trang Chủ\",\n            slug: \"trang-chu\",\n            content: \"<h1>Ch\\xe0o mừng đến với Trung t\\xe2m Tiếng Nhật Quang Dũng</h1>\\n<p>Học tiếng Nhật với đội ngũ gi\\xe1o vi\\xean chuy\\xean nghiệp, phương ph\\xe1p giảng dạy hiện đại.</p>\\n<h2>Tại sao chọn Quang Dũng?</h2>\\n<ul>\\n<li>Gi\\xe1o vi\\xean người Nhật bản ngữ</li>\\n<li>Chương tr\\xecnh học tập chuẩn quốc tế</li>\\n<li>Lớp học nhỏ, tương t\\xe1c cao</li>\\n<li>Hỗ trợ thi cấp chứng chỉ JLPT</li>\\n</ul>\",\n            excerpt: \"Trung tâm tiếng Nhật hàng đầu với phương pháp giảng dạy hiện đại\",\n            status: \"published\",\n            seoTitle: \"Trung tâm Tiếng Nhật Quang Dũng - Học Tiếng Nhật Online\",\n            seoDescription: \"Học tiếng Nhật với giáo viên chuyên nghiệp. Khóa học online, offline và luyện thi JLPT.\",\n            author: \"admin@japancenter.demo\",\n            createdAt: new Date().toISOString(),\n            updatedAt: new Date().toISOString(),\n            pageType: \"page\",\n            categories: [\n                \"home\"\n            ],\n            tags: [\n                \"japanese\",\n                \"language\",\n                \"learning\"\n            ]\n        },\n        {\n            id: \"about-page\",\n            title: \"Giới Thiệu\",\n            slug: \"gioi-thieu\",\n            content: \"<h1>Về Trung t\\xe2m Tiếng Nhật Quang Dũng</h1>\\n<p>Với hơn 10 năm kinh nghiệm trong lĩnh vực giảng dạy tiếng Nhật, Quang Dũng Japanese Center đ\\xe3 đ\\xe0o tạo h\\xe0ng ngh\\xecn học vi\\xean th\\xe0nh c\\xf4ng.</p>\\n<h2>Sứ mệnh</h2>\\n<p>Mang đến chương tr\\xecnh học tiếng Nhật chất lượng cao, gi\\xfap học vi\\xean đạt được mục ti\\xeau học tập v\\xe0 nghề nghiệp.</p>\",\n            excerpt: \"Tìm hiểu về lịch sử và sứ mệnh của Trung tâm Quang Dũng\",\n            status: \"published\",\n            seoTitle: \"Giới thiệu về Trung tâm Tiếng Nhật Quang Dũng\",\n            seoDescription: \"Tìm hiểu về lịch sử, sứ mệnh và đội ngũ giảng viên của Trung tâm Tiếng Nhật Quang Dũng.\",\n            author: \"admin@japancenter.demo\",\n            createdAt: new Date(Date.now() - 86400000).toISOString(),\n            updatedAt: new Date(Date.now() - 86400000).toISOString(),\n            pageType: \"page\",\n            categories: [\n                \"about\"\n            ],\n            tags: [\n                \"about\",\n                \"history\"\n            ]\n        }\n    ];\nconst createDefaultMedia = ()=>[\n        {\n            id: \"media-1\",\n            filename: \"Quang Dũng-logo.jpg\",\n            originalName: \"Quang Dũng-logo.jpg\",\n            url: \"https://picsum.photos/800/400?random=1\",\n            type: \"image\",\n            size: 245000,\n            uploadedBy: \"admin@japancenter.demo\",\n            uploadedAt: new Date().toISOString(),\n            alt: \"Logo Trung tâm Quang Dũng\",\n            caption: \"Logo chính thức của Trung tâm Tiếng Nhật Quang Dũng\"\n        },\n        {\n            id: \"media-2\",\n            filename: \"classroom.jpg\",\n            originalName: \"classroom.jpg\",\n            url: \"https://picsum.photos/800/600?random=2\",\n            type: \"image\",\n            size: 567000,\n            uploadedBy: \"admin@japancenter.demo\",\n            uploadedAt: new Date(Date.now() - 3600000).toISOString(),\n            alt: \"Phòng học hiện đại\",\n            caption: \"Phòng học với trang thiết bị hiện đại\"\n        }\n    ];\nconst createDefaultMenus = ()=>[\n        {\n            id: \"header-menu\",\n            name: \"Menu Chính\",\n            location: \"header\",\n            items: [\n                {\n                    id: \"1\",\n                    label: \"Trang Chủ\",\n                    url: \"/\",\n                    type: \"page\",\n                    order: 1\n                },\n                {\n                    id: \"2\",\n                    label: \"Khóa Học\",\n                    url: \"/courses\",\n                    type: \"page\",\n                    order: 2\n                },\n                {\n                    id: \"3\",\n                    label: \"Giới Thiệu\",\n                    url: \"/about\",\n                    type: \"page\",\n                    order: 3\n                },\n                {\n                    id: \"4\",\n                    label: \"Liên Hệ\",\n                    url: \"/contact\",\n                    type: \"page\",\n                    order: 4\n                }\n            ],\n            createdAt: new Date().toISOString(),\n            updatedAt: new Date().toISOString()\n        }\n    ];\nconst createDefaultAnalytics = ()=>({\n        pageViews: {\n            \"home-page\": 1250,\n            \"about-page\": 867\n        },\n        popularPages: [\n            {\n                pageId: \"home-page\",\n                title: \"Trang Chủ\",\n                views: 1250\n            },\n            {\n                pageId: \"about-page\",\n                title: \"Giới Thiệu\",\n                views: 867\n            }\n        ],\n        recentActivity: [\n            {\n                id: \"1\",\n                action: \"Tạo trang mới\",\n                target: \"Trang Chủ\",\n                user: \"admin@japancenter.demo\",\n                timestamp: new Date().toISOString()\n            },\n            {\n                id: \"2\",\n                action: \"Cập nhật nội dung\",\n                target: \"Giới Thiệu\",\n                user: \"admin@japancenter.demo\",\n                timestamp: new Date(Date.now() - 3600000).toISOString()\n            }\n        ],\n        totalPages: 2,\n        totalPosts: 0,\n        totalMedia: 2\n    });\n// Storage helpers\nconst STORAGE_KEYS = {\n    pages: 'cms_pages',\n    media: 'cms_media',\n    menus: 'cms_menus',\n    settings: 'cms_settings',\n    analytics: 'cms_analytics'\n};\nconst getFromStorage = (key, defaultValue)=>{\n    if (false) {}\n    try {\n        const item = localStorage.getItem(key);\n        return item ? JSON.parse(item) : defaultValue;\n    } catch (e) {\n        return defaultValue;\n    }\n};\nconst setToStorage = (key, value)=>{\n    if (false) {}\n    try {\n        localStorage.setItem(key, JSON.stringify(value));\n    } catch (e) {\n    // Silent fail\n    }\n};\nconst initializeStorage = ()=>{\n    if (false) {}\n    if (!localStorage.getItem(STORAGE_KEYS.settings)) {\n        setToStorage(STORAGE_KEYS.settings, createDefaultSettings());\n    }\n    if (!localStorage.getItem(STORAGE_KEYS.pages)) {\n        setToStorage(STORAGE_KEYS.pages, createDefaultPages());\n    }\n    if (!localStorage.getItem(STORAGE_KEYS.media)) {\n        setToStorage(STORAGE_KEYS.media, createDefaultMedia());\n    }\n    if (!localStorage.getItem(STORAGE_KEYS.menus)) {\n        setToStorage(STORAGE_KEYS.menus, createDefaultMenus());\n    }\n    if (!localStorage.getItem(STORAGE_KEYS.analytics)) {\n        setToStorage(STORAGE_KEYS.analytics, createDefaultAnalytics());\n    }\n};\nconst mockCMSService = {\n    // Pages\n    async getPages () {\n        initializeStorage();\n        await new Promise((resolve)=>setTimeout(resolve, 300));\n        const pages = getFromStorage(STORAGE_KEYS.pages, createDefaultPages());\n        return {\n            success: true,\n            data: pages\n        };\n    },\n    async createPage (page) {\n        await new Promise((resolve)=>setTimeout(resolve, 500));\n        const pages = getFromStorage(STORAGE_KEYS.pages, []);\n        const newPage = {\n            ...page,\n            id: \"page-\".concat(Date.now(), \"-\").concat(Math.random().toString(36).substr(2, 9)),\n            createdAt: new Date().toISOString(),\n            updatedAt: new Date().toISOString()\n        };\n        pages.push(newPage);\n        setToStorage(STORAGE_KEYS.pages, pages);\n        return {\n            success: true,\n            data: newPage\n        };\n    },\n    async updatePage (id, updates) {\n        await new Promise((resolve)=>setTimeout(resolve, 500));\n        const pages = getFromStorage(STORAGE_KEYS.pages, []);\n        const pageIndex = pages.findIndex((p)=>p.id === id);\n        if (pageIndex === -1) {\n            throw new Error('Page not found');\n        }\n        pages[pageIndex] = {\n            ...pages[pageIndex],\n            ...updates,\n            updatedAt: new Date().toISOString()\n        };\n        setToStorage(STORAGE_KEYS.pages, pages);\n        return {\n            success: true,\n            data: pages[pageIndex]\n        };\n    },\n    async deletePage (id) {\n        await new Promise((resolve)=>setTimeout(resolve, 400));\n        const pages = getFromStorage(STORAGE_KEYS.pages, []);\n        const filteredPages = pages.filter((p)=>p.id !== id);\n        setToStorage(STORAGE_KEYS.pages, filteredPages);\n        return {\n            success: true,\n            message: 'Page deleted successfully'\n        };\n    },\n    // Media\n    async getMedia () {\n        initializeStorage();\n        await new Promise((resolve)=>setTimeout(resolve, 200));\n        const media = getFromStorage(STORAGE_KEYS.media, createDefaultMedia());\n        return {\n            success: true,\n            data: media\n        };\n    },\n    async uploadMedia (file) {\n        await new Promise((resolve)=>setTimeout(resolve, 1000));\n        const media = getFromStorage(STORAGE_KEYS.media, []);\n        const newMedia = {\n            id: \"media-\".concat(Date.now(), \"-\").concat(Math.random().toString(36).substr(2, 9)),\n            filename: \"\".concat(Date.now(), \"-\").concat(file.name),\n            originalName: file.name,\n            url: \"https://picsum.photos/800/600?random=\".concat(Date.now()),\n            type: file.type.startsWith('image/') ? 'image' : 'document',\n            size: file.size,\n            uploadedBy: \"admin@japancenter.demo\",\n            uploadedAt: new Date().toISOString(),\n            alt: \"\",\n            caption: \"\"\n        };\n        media.push(newMedia);\n        setToStorage(STORAGE_KEYS.media, media);\n        return {\n            success: true,\n            data: newMedia\n        };\n    },\n    async deleteMedia (id) {\n        await new Promise((resolve)=>setTimeout(resolve, 300));\n        const media = getFromStorage(STORAGE_KEYS.media, []);\n        const filteredMedia = media.filter((m)=>m.id !== id);\n        setToStorage(STORAGE_KEYS.media, filteredMedia);\n        return {\n            success: true,\n            message: 'Media deleted successfully'\n        };\n    },\n    // Menus\n    async getMenus () {\n        initializeStorage();\n        await new Promise((resolve)=>setTimeout(resolve, 150));\n        const menus = getFromStorage(STORAGE_KEYS.menus, createDefaultMenus());\n        return {\n            success: true,\n            data: menus\n        };\n    },\n    async createMenu (menu) {\n        await new Promise((resolve)=>setTimeout(resolve, 400));\n        const menus = getFromStorage(STORAGE_KEYS.menus, []);\n        const newMenu = {\n            ...menu,\n            id: \"menu-\".concat(Date.now()),\n            createdAt: new Date().toISOString(),\n            updatedAt: new Date().toISOString()\n        };\n        menus.push(newMenu);\n        setToStorage(STORAGE_KEYS.menus, menus);\n        return {\n            success: true,\n            data: newMenu\n        };\n    },\n    async updateMenu (id, updates) {\n        await new Promise((resolve)=>setTimeout(resolve, 400));\n        const menus = getFromStorage(STORAGE_KEYS.menus, []);\n        const menuIndex = menus.findIndex((m)=>m.id === id);\n        if (menuIndex === -1) {\n            throw new Error('Menu not found');\n        }\n        menus[menuIndex] = {\n            ...menus[menuIndex],\n            ...updates,\n            updatedAt: new Date().toISOString()\n        };\n        setToStorage(STORAGE_KEYS.menus, menus);\n        return {\n            success: true,\n            data: menus[menuIndex]\n        };\n    },\n    async deleteMenu (id) {\n        await new Promise((resolve)=>setTimeout(resolve, 300));\n        const menus = getFromStorage(STORAGE_KEYS.menus, []);\n        const filteredMenus = menus.filter((m)=>m.id !== id);\n        setToStorage(STORAGE_KEYS.menus, filteredMenus);\n        return {\n            success: true,\n            message: 'Menu deleted successfully'\n        };\n    },\n    // Settings\n    async getSettings () {\n        initializeStorage();\n        await new Promise((resolve)=>setTimeout(resolve, 100));\n        const settings = getFromStorage(STORAGE_KEYS.settings, createDefaultSettings());\n        return {\n            success: true,\n            data: settings\n        };\n    },\n    async updateSettings (updates) {\n        await new Promise((resolve)=>setTimeout(resolve, 500));\n        const currentSettings = getFromStorage(STORAGE_KEYS.settings, createDefaultSettings());\n        const updatedSettings = {\n            ...currentSettings,\n            ...updates\n        };\n        setToStorage(STORAGE_KEYS.settings, updatedSettings);\n        return {\n            success: true,\n            data: updatedSettings\n        };\n    },\n    // Analytics\n    async getAnalytics () {\n        initializeStorage();\n        await new Promise((resolve)=>setTimeout(resolve, 100));\n        const analytics = getFromStorage(STORAGE_KEYS.analytics, createDefaultAnalytics());\n        return {\n            success: true,\n            data: analytics\n        };\n    }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (mockCMSService);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy91dGlscy9tb2NrQ01TU2VydmljZS50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLGtFQUFrRTtBQUdsRSx5QkFBeUI7QUFDekIsTUFBTUEsd0JBQXdCLElBQW9CO1FBQ2hEQyxVQUFVO1FBQ1ZDLGlCQUFpQjtRQUNqQkMsU0FBUztRQUNUQyxjQUFjO1FBQ2RDLGNBQWM7UUFDZEMsZ0JBQWdCO1FBQ2hCQyxhQUFhO1lBQ1hDLFVBQVU7WUFDVkMsU0FBUztZQUNUQyxXQUFXO1lBQ1hDLFNBQVM7UUFDWDtRQUNBQyxhQUFhO1lBQ1hDLGNBQWM7WUFDZEMsb0JBQW9CO1lBQ3BCQyxVQUFVO2dCQUFDO2dCQUFZO2dCQUFTO2dCQUFZO2FBQVM7WUFDckRDLGlCQUFpQjtZQUNqQkMsa0JBQWtCO1FBQ3BCO1FBQ0FDLGVBQWU7WUFDYkMsVUFBVTtZQUNWQyxXQUFXO1lBQ1hDLFNBQVM7UUFDWDtRQUNBQyxlQUFlO1lBQ2JDLGNBQWM7WUFDZEMsZ0JBQWdCO1lBQ2hCQyxhQUFhO1lBQ2JDLFlBQVk7UUFDZDtJQUNGO0FBRUEsTUFBTUMscUJBQXFCLElBQWlCO1FBQzFDO1lBQ0VDLElBQUk7WUFDSkMsT0FBTztZQUNQQyxNQUFNO1lBQ05DLFNBQVU7WUFTVkMsU0FBUztZQUNUQyxRQUFRO1lBQ1JDLFVBQVU7WUFDVkMsZ0JBQWdCO1lBQ2hCQyxRQUFRO1lBQ1JDLFdBQVcsSUFBSUMsT0FBT0MsV0FBVztZQUNqQ0MsV0FBVyxJQUFJRixPQUFPQyxXQUFXO1lBQ2pDRSxVQUFVO1lBQ1ZDLFlBQVk7Z0JBQUM7YUFBTztZQUNwQkMsTUFBTTtnQkFBQztnQkFBWTtnQkFBWTthQUFXO1FBQzVDO1FBQ0E7WUFDRWYsSUFBSTtZQUNKQyxPQUFPO1lBQ1BDLE1BQU07WUFDTkMsU0FBVTtZQUlWQyxTQUFTO1lBQ1RDLFFBQVE7WUFDUkMsVUFBVTtZQUNWQyxnQkFBZ0I7WUFDaEJDLFFBQVE7WUFDUkMsV0FBVyxJQUFJQyxLQUFLQSxLQUFLTSxH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LFlBQVk7SUFDWixNQUFNQztRQUNKOUM7UUFDQSxNQUFNLElBQUlHLFFBQVFDLENBQUFBLFVBQVdDLFdBQVdELFNBQVM7UUFDakQsTUFBTWpCLFlBQVlDLGVBQWVOLGFBQWFLLFNBQVMsRUFBRWxCO1FBQ3pELE9BQU87WUFBRXFDLFNBQVM7WUFBTUMsTUFBTXBCO1FBQVU7SUFDMUM7QUFDRixFQUFFO0FBRUYsaUVBQWVjLGNBQWNBLEVBQUMiLCJzb3VyY2VzIjpbIkQ6XFxXZWJzaXRlXFxRdWFuZ19EdW5nX0NlbnRlclxcSmFwYW5fUHJvX1BsdXNcXHNyY1xcdXRpbHNcXG1vY2tDTVNTZXJ2aWNlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIE1vY2sgQ01TIFNlcnZpY2UgLSBGYWxsYmFjayB3aGVuIEVkZ2UgRnVuY3Rpb24gaXMgbm90IGF2YWlsYWJsZVxyXG5pbXBvcnQgdHlwZSB7IENNU1BhZ2UsIENNU01lZGlhLCBDTVNNZW51LCBDTVNTZXR0aW5ncywgQ01TQW5hbHl0aWNzIH0gZnJvbSAnLi4vY29udGV4dHMvQ01TQ29udGV4dCc7XHJcblxyXG4vLyBEZWZhdWx0IGRhdGEgZmFjdG9yaWVzXHJcbmNvbnN0IGNyZWF0ZURlZmF1bHRTZXR0aW5ncyA9ICgpOiBDTVNTZXR0aW5ncyA9PiAoe1xyXG4gIHNpdGVOYW1lOiBcIlF1YW5nIETFqW5nIEphcGFuZXNlIENlbnRlclwiLFxyXG4gIHNpdGVEZXNjcmlwdGlvbjogXCJMZWFybiBKYXBhbmVzZSB3aXRoIGV4cGVydCB0ZWFjaGVyc1wiLFxyXG4gIHNpdGVVcmw6IFwiaHR0cHM6Ly9RdWFuZyBExaluZy1jZW50ZXIudm5cIixcclxuICBjb250YWN0RW1haWw6IFwiaW5mb0BRdWFuZyBExaluZy1jZW50ZXIudm5cIixcclxuICBjb250YWN0UGhvbmU6IFwiKDAyOCkgMzgyNSAxMjM0XCIsXHJcbiAgY29udGFjdEFkZHJlc3M6IFwiMTIzIE5ndXnhu4VuIEh14buHLCBRdeG6rW4gMSwgVFAuIEjhu5MgQ2jDrSBNaW5oXCIsXHJcbiAgc29jaWFsTGlua3M6IHtcclxuICAgIGZhY2Vib29rOiBcIlwiLFxyXG4gICAgeW91dHViZTogXCJcIixcclxuICAgIGluc3RhZ3JhbTogXCJcIixcclxuICAgIHR3aXR0ZXI6IFwiXCJcclxuICB9LFxyXG4gIHNlb1NldHRpbmdzOiB7XHJcbiAgICBkZWZhdWx0VGl0bGU6IFwiUXVhbmcgRMWpbmcgSmFwYW5lc2UgQ2VudGVyIC0gTGVhcm4gSmFwYW5lc2UgT25saW5lXCIsXHJcbiAgICBkZWZhdWx0RGVzY3JpcHRpb246IFwiTGVhcm4gSmFwYW5lc2Ugd2l0aCBvdXIgZXhwZXJ0IHRlYWNoZXJzLiBPbmxpbmUgY291cnNlcywgdGVzdHMsIGFuZCBtb3JlLlwiLFxyXG4gICAga2V5d29yZHM6IFtcImphcGFuZXNlXCIsIFwibGVhcm5cIiwgXCJsYW5ndWFnZVwiLCBcImNvdXJzZVwiXSxcclxuICAgIGdvb2dsZUFuYWx5dGljczogXCJcIixcclxuICAgIGdvb2dsZVRhZ01hbmFnZXI6IFwiXCJcclxuICB9LFxyXG4gIGVtYWlsU2V0dGluZ3M6IHtcclxuICAgIGZyb21OYW1lOiBcIlF1YW5nIETFqW5nIEphcGFuZXNlIENlbnRlclwiLFxyXG4gICAgZnJvbUVtYWlsOiBcIm5vcmVwbHlAUXVhbmcgRMWpbmctY2VudGVyLnZuXCIsXHJcbiAgICByZXBseVRvOiBcInN1cHBvcnRAUXVhbmcgRMWpbmctY2VudGVyLnZuXCJcclxuICB9LFxyXG4gIHRoZW1lU2V0dGluZ3M6IHtcclxuICAgIHByaW1hcnlDb2xvcjogXCIjZGMyNjI2XCIsXHJcbiAgICBzZWNvbmRhcnlDb2xvcjogXCIjZmVmMmYyXCIsXHJcbiAgICBhY2NlbnRDb2xvcjogXCIjZmVlMmUyXCIsXHJcbiAgICBmb250RmFtaWx5OiBcIkludGVyXCJcclxuICB9XHJcbn0pO1xyXG5cclxuY29uc3QgY3JlYXRlRGVmYXVsdFBhZ2VzID0gKCk6IENNU1BhZ2VbXSA9PiBbXHJcbiAge1xyXG4gICAgaWQ6IFwiaG9tZS1wYWdlXCIsXHJcbiAgICB0aXRsZTogXCJUcmFuZyBDaOG7p1wiLFxyXG4gICAgc2x1ZzogXCJ0cmFuZy1jaHVcIixcclxuICAgIGNvbnRlbnQ6IGA8aDE+Q2jDoG8gbeG7q25nIMSR4bq/biB24bubaSBUcnVuZyB0w6JtIFRp4bq/bmcgTmjhuq10IFF1YW5nIETFqW5nPC9oMT5cclxuPHA+SOG7jWMgdGnhur9uZyBOaOG6rXQgduG7m2kgxJHhu5lpIG5nxakgZ2nDoW8gdmnDqm4gY2h1ecOqbiBuZ2hp4buHcCwgcGjGsMahbmcgcGjDoXAgZ2nhuqNuZyBk4bqheSBoaeG7h24gxJHhuqFpLjwvcD5cclxuPGgyPlThuqFpIHNhbyBjaOG7jW4gUXVhbmcgRMWpbmc/PC9oMj5cclxuPHVsPlxyXG48bGk+R2nDoW8gdmnDqm4gbmfGsOG7nWkgTmjhuq10IGLhuqNuIG5n4buvPC9saT5cclxuPGxpPkNoxrDGoW5nIHRyw6xuaCBo4buNYyB04bqtcCBjaHXhuqluIHF14buRYyB04bq/PC9saT5cclxuPGxpPkzhu5twIGjhu41jIG5o4buPLCB0xrDGoW5nIHTDoWMgY2FvPC9saT5cclxuPGxpPkjhu5cgdHLhu6MgdGhpIGPhuqVwIGNo4bupbmcgY2jhu4kgSkxQVDwvbGk+XHJcbjwvdWw+YCxcclxuICAgIGV4Y2VycHQ6IFwiVHJ1bmcgdMOibSB0aeG6v25nIE5o4bqtdCBow6BuZyDEkeG6p3UgduG7m2kgcGjGsMahbmcgcGjDoXAgZ2nhuqNuZyBk4bqheSBoaeG7h24gxJHhuqFpXCIsXHJcbiAgICBzdGF0dXM6IFwicHVibGlzaGVkXCIsXHJcbiAgICBzZW9UaXRsZTogXCJUcnVuZyB0w6JtIFRp4bq/bmcgTmjhuq10IFF1YW5nIETFqW5nIC0gSOG7jWMgVGnhur9uZyBOaOG6rXQgT25saW5lXCIsXHJcbiAgICBzZW9EZXNjcmlwdGlvbjogXCJI4buNYyB0aeG6v25nIE5o4bqtdCB24bubaSBnacOhbyB2acOqbiBjaHV5w6puIG5naGnhu4dwLiBLaMOzYSBo4buNYyBvbmxpbmUsIG9mZmxpbmUgdsOgIGx1eeG7h24gdGhpIEpMUFQuXCIsXHJcbiAgICBhdXRob3I6IFwiYWRtaW5AamFwYW5jZW50ZXIuZGVtb1wiLFxyXG4gICAgY3JlYXRlZEF0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXHJcbiAgICB1cGRhdGVkQXQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcclxuICAgIHBhZ2VUeXBlOiBcInBhZ2VcIixcclxuICAgIGNhdGVnb3JpZXM6IFtcImhvbWVcIl0sXHJcbiAgICB0YWdzOiBbXCJqYXBhbmVzZVwiLCBcImxhbmd1YWdlXCIsIFwibGVhcm5pbmdcIl1cclxuICB9LFxyXG4gIHtcclxuICAgIGlkOiBcImFib3V0LXBhZ2VcIixcclxuICAgIHRpdGxlOiBcIkdp4bubaSBUaGnhu4d1XCIsXHJcbiAgICBzbHVnOiBcImdpb2ktdGhpZXVcIixcclxuICAgIGNvbnRlbnQ6IGA8aDE+VuG7gSBUcnVuZyB0w6JtIFRp4bq/bmcgTmjhuq10IFF1YW5nIETFqW5nPC9oMT5cclxuPHA+VuG7m2kgaMahbiAxMCBuxINtIGtpbmggbmdoaeG7h20gdHJvbmcgbMSpbmggduG7sWMgZ2nhuqNuZyBk4bqheSB0aeG6v25nIE5o4bqtdCwgUXVhbmcgRMWpbmcgSmFwYW5lc2UgQ2VudGVyIMSRw6MgxJHDoG8gdOG6oW8gaMOgbmcgbmdow6xuIGjhu41jIHZpw6puIHRow6BuaCBjw7RuZy48L3A+XHJcbjxoMj5T4bupIG3hu4duaDwvaDI+XHJcbjxwPk1hbmcgxJHhur9uIGNoxrDGoW5nIHRyw6xuaCBo4buNYyB0aeG6v25nIE5o4bqtdCBjaOG6pXQgbMaw4bujbmcgY2FvLCBnacO6cCBo4buNYyB2acOqbiDEkeG6oXQgxJHGsOG7o2MgbeG7pWMgdGnDqnUgaOG7jWMgdOG6rXAgdsOgIG5naOG7gSBuZ2hp4buHcC48L3A+YCxcclxuICAgIGV4Y2VycHQ6IFwiVMOsbSBoaeG7g3UgduG7gSBs4buLY2ggc+G7rSB2w6Agc+G7qSBt4buHbmggY+G7p2EgVHJ1bmcgdMOibSBRdWFuZyBExaluZ1wiLFxyXG4gICAgc3RhdHVzOiBcInB1Ymxpc2hlZFwiLFxyXG4gICAgc2VvVGl0bGU6IFwiR2nhu5tpIHRoaeG7h3UgduG7gSBUcnVuZyB0w6JtIFRp4bq/bmcgTmjhuq10IFF1YW5nIETFqW5nXCIsXHJcbiAgICBzZW9EZXNjcmlwdGlvbjogXCJUw6xtIGhp4buDdSB24buBIGzhu4tjaCBz4butLCBz4bupIG3hu4duaCB2w6AgxJHhu5lpIG5nxakgZ2nhuqNuZyB2acOqbiBj4bunYSBUcnVuZyB0w6JtIFRp4bq/bmcgTmjhuq10IFF1YW5nIETFqW5nLlwiLFxyXG4gICAgYXV0aG9yOiBcImFkbWluQGphcGFuY2VudGVyLmRlbW9cIixcclxuICAgIGNyZWF0ZWRBdDogbmV3IERhdGUoRGF0ZS5ub3coKSAtIDg2NDAwMDAwKS50b0lTT1N0cmluZygpLFxyXG4gICAgdXBkYXRlZEF0OiBuZXcgRGF0ZShEYXRlLm5vdygpIC0gODY0MDAwMDApLnRvSVNPU3RyaW5nKCksXHJcbiAgICBwYWdlVHlwZTogXCJwYWdlXCIsXHJcbiAgICBjYXRlZ29yaWVzOiBbXCJhYm91dFwiXSxcclxuICAgIHRhZ3M6IFtcImFib3V0XCIsIFwiaGlzdG9yeVwiXVxyXG4gIH1cclxuXTtcclxuXHJcbmNvbnN0IGNyZWF0ZURlZmF1bHRNZWRpYSA9ICgpOiBDTVNNZWRpYVtdID0+IFtcclxuICB7XHJcbiAgICBpZDogXCJtZWRpYS0xXCIsXHJcbiAgICBmaWxlbmFtZTogXCJRdWFuZyBExaluZy1sb2dvLmpwZ1wiLFxyXG4gICAgb3JpZ2luYWxOYW1lOiBcIlF1YW5nIETFqW5nLWxvZ28uanBnXCIsXHJcbiAgICB1cmw6IFwiaHR0cHM6Ly9waWNzdW0ucGhvdG9zLzgwMC80MDA/cmFuZG9tPTFcIixcclxuICAgIHR5cGU6IFwiaW1hZ2VcIixcclxuICAgIHNpemU6IDI0NTAwMCxcclxuICAgIHVwbG9hZGVkQnk6IFwiYWRtaW5AamFwYW5jZW50ZXIuZGVtb1wiLFxyXG4gICAgdXBsb2FkZWRBdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxyXG4gICAgYWx0OiBcIkxvZ28gVHJ1bmcgdMOibSBRdWFuZyBExaluZ1wiLFxyXG4gICAgY2FwdGlvbjogXCJMb2dvIGNow61uaCB0aOG7qWMgY+G7p2EgVHJ1bmcgdMOibSBUaeG6v25nIE5o4bqtdCBRdWFuZyBExaluZ1wiXHJcbiAgfSxcclxuICB7XHJcbiAgICBpZDogXCJtZWRpYS0yXCIsXHJcbiAgICBmaWxlbmFtZTogXCJjbGFzc3Jvb20uanBnXCIsXHJcbiAgICBvcmlnaW5hbE5hbWU6IFwiY2xhc3Nyb29tLmpwZ1wiLFxyXG4gICAgdXJsOiBcImh0dHBzOi8vcGljc3VtLnBob3Rvcy84MDAvNjAwP3JhbmRvbT0yXCIsXHJcbiAgICB0eXBlOiBcImltYWdlXCIsXHJcbiAgICBzaXplOiA1NjcwMDAsXHJcbiAgICB1cGxvYWRlZEJ5OiBcImFkbWluQGphcGFuY2VudGVyLmRlbW9cIixcclxuICAgIHVwbG9hZGVkQXQ6IG5ldyBEYXRlKERhdGUubm93KCkgLSAzNjAwMDAwKS50b0lTT1N0cmluZygpLFxyXG4gICAgYWx0OiBcIlBow7JuZyBo4buNYyBoaeG7h24gxJHhuqFpXCIsXHJcbiAgICBjYXB0aW9uOiBcIlBow7JuZyBo4buNYyB24bubaSB0cmFuZyB0aGnhur90IGLhu4sgaGnhu4duIMSR4bqhaVwiXHJcbiAgfVxyXG5dO1xyXG5cclxuY29uc3QgY3JlYXRlRGVmYXVsdE1lbnVzID0gKCk6IENNU01lbnVbXSA9PiBbXHJcbiAge1xyXG4gICAgaWQ6IFwiaGVhZGVyLW1lbnVcIixcclxuICAgIG5hbWU6IFwiTWVudSBDaMOtbmhcIixcclxuICAgIGxvY2F0aW9uOiBcImhlYWRlclwiLFxyXG4gICAgaXRlbXM6IFtcclxuICAgICAge1xyXG4gICAgICAgIGlkOiBcIjFcIixcclxuICAgICAgICBsYWJlbDogXCJUcmFuZyBDaOG7p1wiLFxyXG4gICAgICAgIHVybDogXCIvXCIsXHJcbiAgICAgICAgdHlwZTogXCJwYWdlXCIsXHJcbiAgICAgICAgb3JkZXI6IDFcclxuICAgICAgfSxcclxuICAgICAge1xyXG4gICAgICAgIGlkOiBcIjJcIixcclxuICAgICAgICBsYWJlbDogXCJLaMOzYSBI4buNY1wiLFxyXG4gICAgICAgIHVybDogXCIvY291cnNlc1wiLFxyXG4gICAgICAgIHR5cGU6IFwicGFnZVwiLFxyXG4gICAgICAgIG9yZGVyOiAyXHJcbiAgICAgIH0sXHJcbiAgICAgIHtcclxuICAgICAgICBpZDogXCIzXCIsXHJcbiAgICAgICAgbGFiZWw6IFwiR2nhu5tpIFRoaeG7h3VcIixcclxuICAgICAgICB1cmw6IFwiL2Fib3V0XCIsXHJcbiAgICAgICAgdHlwZTogXCJwYWdlXCIsXHJcbiAgICAgICAgb3JkZXI6IDNcclxuICAgICAgfSxcclxuICAgICAge1xyXG4gICAgICAgIGlkOiBcIjRcIixcclxuICAgICAgICBsYWJlbDogXCJMacOqbiBI4buHXCIsXHJcbiAgICAgICAgdXJsOiBcIi9jb250YWN0XCIsXHJcbiAgICAgICAgdHlwZTogXCJwYWdlXCIsXHJcbiAgICAgICAgb3JkZXI6IDRcclxuICAgICAgfVxyXG4gICAgXSxcclxuICAgIGNyZWF0ZWRBdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxyXG4gICAgdXBkYXRlZEF0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKClcclxuICB9XHJcbl07XHJcblxyXG5jb25zdCBjcmVhdGVEZWZhdWx0QW5hbHl0aWNzID0gKCk6IENNU0FuYWx5dGljcyA9PiAoe1xyXG4gIHBhZ2VWaWV3czoge1xyXG4gICAgXCJob21lLXBhZ2VcIjogMTI1MCxcclxuICAgIFwiYWJvdXQtcGFnZVwiOiA4NjdcclxuICB9LFxyXG4gIHBvcHVsYXJQYWdlczogW1xyXG4gICAge1xyXG4gICAgICBwYWdlSWQ6IFwiaG9tZS1wYWdlXCIsXHJcbiAgICAgIHRpdGxlOiBcIlRyYW5nIENo4bunXCIsXHJcbiAgICAgIHZpZXdzOiAxMjUwXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBwYWdlSWQ6IFwiYWJvdXQtcGFnZVwiLFxyXG4gICAgICB0aXRsZTogXCJHaeG7m2kgVGhp4buHdVwiLFxyXG4gICAgICB2aWV3czogODY3XHJcbiAgICB9XHJcbiAgXSxcclxuICByZWNlbnRBY3Rpdml0eTogW1xyXG4gICAge1xyXG4gICAgICBpZDogXCIxXCIsXHJcbiAgICAgIGFjdGlvbjogXCJU4bqhbyB0cmFuZyBt4bubaVwiLFxyXG4gICAgICB0YXJnZXQ6IFwiVHJhbmcgQ2jhu6dcIixcclxuICAgICAgdXNlcjogXCJhZG1pbkBqYXBhbmNlbnRlci5kZW1vXCIsXHJcbiAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpZDogXCIyXCIsXHJcbiAgICAgIGFjdGlvbjogXCJD4bqtcCBuaOG6rXQgbuG7mWkgZHVuZ1wiLFxyXG4gICAgICB0YXJnZXQ6IFwiR2nhu5tpIFRoaeG7h3VcIixcclxuICAgICAgdXNlcjogXCJhZG1pbkBqYXBhbmNlbnRlci5kZW1vXCIsXHJcbiAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoRGF0ZS5ub3coKSAtIDM2MDAwMDApLnRvSVNPU3RyaW5nKClcclxuICAgIH1cclxuICBdLFxyXG4gIHRvdGFsUGFnZXM6IDIsXHJcbiAgdG90YWxQb3N0czogMCxcclxuICB0b3RhbE1lZGlhOiAyXHJcbn0pO1xyXG5cclxuLy8gU3RvcmFnZSBoZWxwZXJzXHJcbmNvbnN0IFNUT1JBR0VfS0VZUyA9IHtcclxuICBwYWdlczogJ2Ntc19wYWdlcycsXHJcbiAgbWVkaWE6ICdjbXNfbWVkaWEnLFxyXG4gIG1lbnVzOiAnY21zX21lbnVzJyxcclxuICBzZXR0aW5nczogJ2Ntc19zZXR0aW5ncycsXHJcbiAgYW5hbHl0aWNzOiAnY21zX2FuYWx5dGljcydcclxufTtcclxuXHJcbmNvbnN0IGdldEZyb21TdG9yYWdlID0gKGtleTogc3RyaW5nLCBkZWZhdWx0VmFsdWU6IGFueSkgPT4ge1xyXG4gIGlmICh0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJykgcmV0dXJuIGRlZmF1bHRWYWx1ZTtcclxuICB0cnkge1xyXG4gICAgY29uc3QgaXRlbSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKGtleSk7XHJcbiAgICByZXR1cm4gaXRlbSA/IEpTT04ucGFyc2UoaXRlbSkgOiBkZWZhdWx0VmFsdWU7XHJcbiAgfSBjYXRjaCB7XHJcbiAgICByZXR1cm4gZGVmYXVsdFZhbHVlO1xyXG4gIH1cclxufTtcclxuXHJcbmNvbnN0IHNldFRvU3RvcmFnZSA9IChrZXk6IHN0cmluZywgdmFsdWU6IGFueSkgPT4ge1xyXG4gIGlmICh0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJykgcmV0dXJuO1xyXG4gIHRyeSB7XHJcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShrZXksIEpTT04uc3RyaW5naWZ5KHZhbHVlKSk7XHJcbiAgfSBjYXRjaCB7XHJcbiAgICAvLyBTaWxlbnQgZmFpbFxyXG4gIH1cclxufTtcclxuXHJcbmNvbnN0IGluaXRpYWxpemVTdG9yYWdlID0gKCkgPT4ge1xyXG4gIGlmICh0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJykgcmV0dXJuO1xyXG4gIFxyXG4gIGlmICghbG9jYWxTdG9yYWdlLmdldEl0ZW0oU1RPUkFHRV9LRVlTLnNldHRpbmdzKSkge1xyXG4gICAgc2V0VG9TdG9yYWdlKFNUT1JBR0VfS0VZUy5zZXR0aW5ncywgY3JlYXRlRGVmYXVsdFNldHRpbmdzKCkpO1xyXG4gIH1cclxuICBpZiAoIWxvY2FsU3RvcmFnZS5nZXRJdGVtKFNUT1JBR0VfS0VZUy5wYWdlcykpIHtcclxuICAgIHNldFRvU3RvcmFnZShTVE9SQUdFX0tFWVMucGFnZXMsIGNyZWF0ZURlZmF1bHRQYWdlcygpKTtcclxuICB9XHJcbiAgaWYgKCFsb2NhbFN0b3JhZ2UuZ2V0SXRlbShTVE9SQUdFX0tFWVMubWVkaWEpKSB7XHJcbiAgICBzZXRUb1N0b3JhZ2UoU1RPUkFHRV9LRVlTLm1lZGlhLCBjcmVhdGVEZWZhdWx0TWVkaWEoKSk7XHJcbiAgfVxyXG4gIGlmICghbG9jYWxTdG9yYWdlLmdldEl0ZW0oU1RPUkFHRV9LRVlTLm1lbnVzKSkge1xyXG4gICAgc2V0VG9TdG9yYWdlKFNUT1JBR0VfS0VZUy5tZW51cywgY3JlYXRlRGVmYXVsdE1lbnVzKCkpO1xyXG4gIH1cclxuICBpZiAoIWxvY2FsU3RvcmFnZS5nZXRJdGVtKFNUT1JBR0VfS0VZUy5hbmFseXRpY3MpKSB7XHJcbiAgICBzZXRUb1N0b3JhZ2UoU1RPUkFHRV9LRVlTLmFuYWx5dGljcywgY3JlYXRlRGVmYXVsdEFuYWx5dGljcygpKTtcclxuICB9XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgbW9ja0NNU1NlcnZpY2UgPSB7XHJcbiAgLy8gUGFnZXNcclxuICBhc3luYyBnZXRQYWdlcygpOiBQcm9taXNlPHsgc3VjY2VzczogYm9vbGVhbjsgZGF0YTogQ01TUGFnZVtdIH0+IHtcclxuICAgIGluaXRpYWxpemVTdG9yYWdlKCk7XHJcbiAgICBhd2FpdCBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgMzAwKSk7XHJcbiAgICBjb25zdCBwYWdlcyA9IGdldEZyb21TdG9yYWdlKFNUT1JBR0VfS0VZUy5wYWdlcywgY3JlYXRlRGVmYXVsdFBhZ2VzKCkpO1xyXG4gICAgcmV0dXJuIHsgc3VjY2VzczogdHJ1ZSwgZGF0YTogcGFnZXMgfTtcclxuICB9LFxyXG5cclxuICBhc3luYyBjcmVhdGVQYWdlKHBhZ2U6IE9taXQ8Q01TUGFnZSwgJ2lkJyB8ICdjcmVhdGVkQXQnIHwgJ3VwZGF0ZWRBdCc+KTogUHJvbWlzZTx7IHN1Y2Nlc3M6IGJvb2xlYW47IGRhdGE6IENNU1BhZ2UgfT4ge1xyXG4gICAgYXdhaXQgbmV3IFByb21pc2UocmVzb2x2ZSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIDUwMCkpO1xyXG4gICAgY29uc3QgcGFnZXMgPSBnZXRGcm9tU3RvcmFnZShTVE9SQUdFX0tFWVMucGFnZXMsIFtdKTtcclxuICAgIGNvbnN0IG5ld1BhZ2U6IENNU1BhZ2UgPSB7XHJcbiAgICAgIC4uLnBhZ2UsXHJcbiAgICAgIGlkOiBgcGFnZS0ke0RhdGUubm93KCl9LSR7TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIDkpfWAsXHJcbiAgICAgIGNyZWF0ZWRBdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxyXG4gICAgICB1cGRhdGVkQXQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKVxyXG4gICAgfTtcclxuICAgIHBhZ2VzLnB1c2gobmV3UGFnZSk7XHJcbiAgICBzZXRUb1N0b3JhZ2UoU1RPUkFHRV9LRVlTLnBhZ2VzLCBwYWdlcyk7XHJcbiAgICByZXR1cm4geyBzdWNjZXNzOiB0cnVlLCBkYXRhOiBuZXdQYWdlIH07XHJcbiAgfSxcclxuXHJcbiAgYXN5bmMgdXBkYXRlUGFnZShpZDogc3RyaW5nLCB1cGRhdGVzOiBQYXJ0aWFsPENNU1BhZ2U+KTogUHJvbWlzZTx7IHN1Y2Nlc3M6IGJvb2xlYW47IGRhdGE6IENNU1BhZ2UgfT4ge1xyXG4gICAgYXdhaXQgbmV3IFByb21pc2UocmVzb2x2ZSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIDUwMCkpO1xyXG4gICAgY29uc3QgcGFnZXMgPSBnZXRGcm9tU3RvcmFnZShTVE9SQUdFX0tFWVMucGFnZXMsIFtdKTtcclxuICAgIGNvbnN0IHBhZ2VJbmRleCA9IHBhZ2VzLmZpbmRJbmRleCgocDogQ01TUGFnZSkgPT4gcC5pZCA9PT0gaWQpO1xyXG4gICAgXHJcbiAgICBpZiAocGFnZUluZGV4ID09PSAtMSkge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1BhZ2Ugbm90IGZvdW5kJyk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIHBhZ2VzW3BhZ2VJbmRleF0gPSB7XHJcbiAgICAgIC4uLnBhZ2VzW3BhZ2VJbmRleF0sXHJcbiAgICAgIC4uLnVwZGF0ZXMsXHJcbiAgICAgIHVwZGF0ZWRBdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpXHJcbiAgICB9O1xyXG4gICAgc2V0VG9TdG9yYWdlKFNUT1JBR0VfS0VZUy5wYWdlcywgcGFnZXMpO1xyXG4gICAgcmV0dXJuIHsgc3VjY2VzczogdHJ1ZSwgZGF0YTogcGFnZXNbcGFnZUluZGV4XSB9O1xyXG4gIH0sXHJcblxyXG4gIGFzeW5jIGRlbGV0ZVBhZ2UoaWQ6IHN0cmluZyk6IFByb21pc2U8eyBzdWNjZXNzOiBib29sZWFuOyBtZXNzYWdlOiBzdHJpbmcgfT4ge1xyXG4gICAgYXdhaXQgbmV3IFByb21pc2UocmVzb2x2ZSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIDQwMCkpO1xyXG4gICAgY29uc3QgcGFnZXMgPSBnZXRGcm9tU3RvcmFnZShTVE9SQUdFX0tFWVMucGFnZXMsIFtdKTtcclxuICAgIGNvbnN0IGZpbHRlcmVkUGFnZXMgPSBwYWdlcy5maWx0ZXIoKHA6IENNU1BhZ2UpID0+IHAuaWQgIT09IGlkKTtcclxuICAgIHNldFRvU3RvcmFnZShTVE9SQUdFX0tFWVMucGFnZXMsIGZpbHRlcmVkUGFnZXMpO1xyXG4gICAgcmV0dXJuIHsgc3VjY2VzczogdHJ1ZSwgbWVzc2FnZTogJ1BhZ2UgZGVsZXRlZCBzdWNjZXNzZnVsbHknIH07XHJcbiAgfSxcclxuXHJcbiAgLy8gTWVkaWFcclxuICBhc3luYyBnZXRNZWRpYSgpOiBQcm9taXNlPHsgc3VjY2VzczogYm9vbGVhbjsgZGF0YTogQ01TTWVkaWFbXSB9PiB7XHJcbiAgICBpbml0aWFsaXplU3RvcmFnZSgpO1xyXG4gICAgYXdhaXQgbmV3IFByb21pc2UocmVzb2x2ZSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIDIwMCkpO1xyXG4gICAgY29uc3QgbWVkaWEgPSBnZXRGcm9tU3RvcmFnZShTVE9SQUdFX0tFWVMubWVkaWEsIGNyZWF0ZURlZmF1bHRNZWRpYSgpKTtcclxuICAgIHJldHVybiB7IHN1Y2Nlc3M6IHRydWUsIGRhdGE6IG1lZGlhIH07XHJcbiAgfSxcclxuXHJcbiAgYXN5bmMgdXBsb2FkTWVkaWEoZmlsZTogRmlsZSk6IFByb21pc2U8eyBzdWNjZXNzOiBib29sZWFuOyBkYXRhOiBDTVNNZWRpYSB9PiB7XHJcbiAgICBhd2FpdCBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgMTAwMCkpO1xyXG4gICAgY29uc3QgbWVkaWEgPSBnZXRGcm9tU3RvcmFnZShTVE9SQUdFX0tFWVMubWVkaWEsIFtdKTtcclxuICAgIGNvbnN0IG5ld01lZGlhOiBDTVNNZWRpYSA9IHtcclxuICAgICAgaWQ6IGBtZWRpYS0ke0RhdGUubm93KCl9LSR7TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIDkpfWAsXHJcbiAgICAgIGZpbGVuYW1lOiBgJHtEYXRlLm5vdygpfS0ke2ZpbGUubmFtZX1gLFxyXG4gICAgICBvcmlnaW5hbE5hbWU6IGZpbGUubmFtZSxcclxuICAgICAgdXJsOiBgaHR0cHM6Ly9waWNzdW0ucGhvdG9zLzgwMC82MDA/cmFuZG9tPSR7RGF0ZS5ub3coKX1gLFxyXG4gICAgICB0eXBlOiBmaWxlLnR5cGUuc3RhcnRzV2l0aCgnaW1hZ2UvJykgPyAnaW1hZ2UnIDogJ2RvY3VtZW50JyxcclxuICAgICAgc2l6ZTogZmlsZS5zaXplLFxyXG4gICAgICB1cGxvYWRlZEJ5OiBcImFkbWluQGphcGFuY2VudGVyLmRlbW9cIixcclxuICAgICAgdXBsb2FkZWRBdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxyXG4gICAgICBhbHQ6IFwiXCIsXHJcbiAgICAgIGNhcHRpb246IFwiXCJcclxuICAgIH07XHJcbiAgICBtZWRpYS5wdXNoKG5ld01lZGlhKTtcclxuICAgIHNldFRvU3RvcmFnZShTVE9SQUdFX0tFWVMubWVkaWEsIG1lZGlhKTtcclxuICAgIHJldHVybiB7IHN1Y2Nlc3M6IHRydWUsIGRhdGE6IG5ld01lZGlhIH07XHJcbiAgfSxcclxuXHJcbiAgYXN5bmMgZGVsZXRlTWVkaWEoaWQ6IHN0cmluZyk6IFByb21pc2U8eyBzdWNjZXNzOiBib29sZWFuOyBtZXNzYWdlOiBzdHJpbmcgfT4ge1xyXG4gICAgYXdhaXQgbmV3IFByb21pc2UocmVzb2x2ZSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIDMwMCkpO1xyXG4gICAgY29uc3QgbWVkaWEgPSBnZXRGcm9tU3RvcmFnZShTVE9SQUdFX0tFWVMubWVkaWEsIFtdKTtcclxuICAgIGNvbnN0IGZpbHRlcmVkTWVkaWEgPSBtZWRpYS5maWx0ZXIoKG06IENNU01lZGlhKSA9PiBtLmlkICE9PSBpZCk7XHJcbiAgICBzZXRUb1N0b3JhZ2UoU1RPUkFHRV9LRVlTLm1lZGlhLCBmaWx0ZXJlZE1lZGlhKTtcclxuICAgIHJldHVybiB7IHN1Y2Nlc3M6IHRydWUsIG1lc3NhZ2U6ICdNZWRpYSBkZWxldGVkIHN1Y2Nlc3NmdWxseScgfTtcclxuICB9LFxyXG5cclxuICAvLyBNZW51c1xyXG4gIGFzeW5jIGdldE1lbnVzKCk6IFByb21pc2U8eyBzdWNjZXNzOiBib29sZWFuOyBkYXRhOiBDTVNNZW51W10gfT4ge1xyXG4gICAgaW5pdGlhbGl6ZVN0b3JhZ2UoKTtcclxuICAgIGF3YWl0IG5ldyBQcm9taXNlKHJlc29sdmUgPT4gc2V0VGltZW91dChyZXNvbHZlLCAxNTApKTtcclxuICAgIGNvbnN0IG1lbnVzID0gZ2V0RnJvbVN0b3JhZ2UoU1RPUkFHRV9LRVlTLm1lbnVzLCBjcmVhdGVEZWZhdWx0TWVudXMoKSk7XHJcbiAgICByZXR1cm4geyBzdWNjZXNzOiB0cnVlLCBkYXRhOiBtZW51cyB9O1xyXG4gIH0sXHJcblxyXG4gIGFzeW5jIGNyZWF0ZU1lbnUobWVudTogT21pdDxDTVNNZW51LCAnaWQnIHwgJ2NyZWF0ZWRBdCcgfCAndXBkYXRlZEF0Jz4pOiBQcm9taXNlPHsgc3VjY2VzczogYm9vbGVhbjsgZGF0YTogQ01TTWVudSB9PiB7XHJcbiAgICBhd2FpdCBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgNDAwKSk7XHJcbiAgICBjb25zdCBtZW51cyA9IGdldEZyb21TdG9yYWdlKFNUT1JBR0VfS0VZUy5tZW51cywgW10pO1xyXG4gICAgY29uc3QgbmV3TWVudTogQ01TTWVudSA9IHtcclxuICAgICAgLi4ubWVudSxcclxuICAgICAgaWQ6IGBtZW51LSR7RGF0ZS5ub3coKX1gLFxyXG4gICAgICBjcmVhdGVkQXQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcclxuICAgICAgdXBkYXRlZEF0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKClcclxuICAgIH07XHJcbiAgICBtZW51cy5wdXNoKG5ld01lbnUpO1xyXG4gICAgc2V0VG9TdG9yYWdlKFNUT1JBR0VfS0VZUy5tZW51cywgbWVudXMpO1xyXG4gICAgcmV0dXJuIHsgc3VjY2VzczogdHJ1ZSwgZGF0YTogbmV3TWVudSB9O1xyXG4gIH0sXHJcblxyXG4gIGFzeW5jIHVwZGF0ZU1lbnUoaWQ6IHN0cmluZywgdXBkYXRlczogUGFydGlhbDxDTVNNZW51Pik6IFByb21pc2U8eyBzdWNjZXNzOiBib29sZWFuOyBkYXRhOiBDTVNNZW51IH0+IHtcclxuICAgIGF3YWl0IG5ldyBQcm9taXNlKHJlc29sdmUgPT4gc2V0VGltZW91dChyZXNvbHZlLCA0MDApKTtcclxuICAgIGNvbnN0IG1lbnVzID0gZ2V0RnJvbVN0b3JhZ2UoU1RPUkFHRV9LRVlTLm1lbnVzLCBbXSk7XHJcbiAgICBjb25zdCBtZW51SW5kZXggPSBtZW51cy5maW5kSW5kZXgoKG06IENNU01lbnUpID0+IG0uaWQgPT09IGlkKTtcclxuICAgIFxyXG4gICAgaWYgKG1lbnVJbmRleCA9PT0gLTEpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKCdNZW51IG5vdCBmb3VuZCcpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBtZW51c1ttZW51SW5kZXhdID0ge1xyXG4gICAgICAuLi5tZW51c1ttZW51SW5kZXhdLFxyXG4gICAgICAuLi51cGRhdGVzLFxyXG4gICAgICB1cGRhdGVkQXQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKVxyXG4gICAgfTtcclxuICAgIHNldFRvU3RvcmFnZShTVE9SQUdFX0tFWVMubWVudXMsIG1lbnVzKTtcclxuICAgIHJldHVybiB7IHN1Y2Nlc3M6IHRydWUsIGRhdGE6IG1lbnVzW21lbnVJbmRleF0gfTtcclxuICB9LFxyXG5cclxuICBhc3luYyBkZWxldGVNZW51KGlkOiBzdHJpbmcpOiBQcm9taXNlPHsgc3VjY2VzczogYm9vbGVhbjsgbWVzc2FnZTogc3RyaW5nIH0+IHtcclxuICAgIGF3YWl0IG5ldyBQcm9taXNlKHJlc29sdmUgPT4gc2V0VGltZW91dChyZXNvbHZlLCAzMDApKTtcclxuICAgIGNvbnN0IG1lbnVzID0gZ2V0RnJvbVN0b3JhZ2UoU1RPUkFHRV9LRVlTLm1lbnVzLCBbXSk7XHJcbiAgICBjb25zdCBmaWx0ZXJlZE1lbnVzID0gbWVudXMuZmlsdGVyKChtOiBDTVNNZW51KSA9PiBtLmlkICE9PSBpZCk7XHJcbiAgICBzZXRUb1N0b3JhZ2UoU1RPUkFHRV9LRVlTLm1lbnVzLCBmaWx0ZXJlZE1lbnVzKTtcclxuICAgIHJldHVybiB7IHN1Y2Nlc3M6IHRydWUsIG1lc3NhZ2U6ICdNZW51IGRlbGV0ZWQgc3VjY2Vzc2Z1bGx5JyB9O1xyXG4gIH0sXHJcblxyXG4gIC8vIFNldHRpbmdzXHJcbiAgYXN5bmMgZ2V0U2V0dGluZ3MoKTogUHJvbWlzZTx7IHN1Y2Nlc3M6IGJvb2xlYW47IGRhdGE6IENNU1NldHRpbmdzIH0+IHtcclxuICAgIGluaXRpYWxpemVTdG9yYWdlKCk7XHJcbiAgICBhd2FpdCBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgMTAwKSk7XHJcbiAgICBjb25zdCBzZXR0aW5ncyA9IGdldEZyb21TdG9yYWdlKFNUT1JBR0VfS0VZUy5zZXR0aW5ncywgY3JlYXRlRGVmYXVsdFNldHRpbmdzKCkpO1xyXG4gICAgcmV0dXJuIHsgc3VjY2VzczogdHJ1ZSwgZGF0YTogc2V0dGluZ3MgfTtcclxuICB9LFxyXG5cclxuICBhc3luYyB1cGRhdGVTZXR0aW5ncyh1cGRhdGVzOiBQYXJ0aWFsPENNU1NldHRpbmdzPik6IFByb21pc2U8eyBzdWNjZXNzOiBib29sZWFuOyBkYXRhOiBDTVNTZXR0aW5ncyB9PiB7XHJcbiAgICBhd2FpdCBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgNTAwKSk7XHJcbiAgICBjb25zdCBjdXJyZW50U2V0dGluZ3MgPSBnZXRGcm9tU3RvcmFnZShTVE9SQUdFX0tFWVMuc2V0dGluZ3MsIGNyZWF0ZURlZmF1bHRTZXR0aW5ncygpKTtcclxuICAgIGNvbnN0IHVwZGF0ZWRTZXR0aW5ncyA9IHsgLi4uY3VycmVudFNldHRpbmdzLCAuLi51cGRhdGVzIH07XHJcbiAgICBzZXRUb1N0b3JhZ2UoU1RPUkFHRV9LRVlTLnNldHRpbmdzLCB1cGRhdGVkU2V0dGluZ3MpO1xyXG4gICAgcmV0dXJuIHsgc3VjY2VzczogdHJ1ZSwgZGF0YTogdXBkYXRlZFNldHRpbmdzIH07XHJcbiAgfSxcclxuXHJcbiAgLy8gQW5hbHl0aWNzXHJcbiAgYXN5bmMgZ2V0QW5hbHl0aWNzKCk6IFByb21pc2U8eyBzdWNjZXNzOiBib29sZWFuOyBkYXRhOiBDTVNBbmFseXRpY3MgfT4ge1xyXG4gICAgaW5pdGlhbGl6ZVN0b3JhZ2UoKTtcclxuICAgIGF3YWl0IG5ldyBQcm9taXNlKHJlc29sdmUgPT4gc2V0VGltZW91dChyZXNvbHZlLCAxMDApKTtcclxuICAgIGNvbnN0IGFuYWx5dGljcyA9IGdldEZyb21TdG9yYWdlKFNUT1JBR0VfS0VZUy5hbmFseXRpY3MsIGNyZWF0ZURlZmF1bHRBbmFseXRpY3MoKSk7XHJcbiAgICByZXR1cm4geyBzdWNjZXNzOiB0cnVlLCBkYXRhOiBhbmFseXRpY3MgfTtcclxuICB9XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBtb2NrQ01TU2VydmljZTtcclxuIl0sIm5hbWVzIjpbImNyZWF0ZURlZmF1bHRTZXR0aW5ncyIsInNpdGVOYW1lIiwic2l0ZURlc2NyaXB0aW9uIiwic2l0ZVVybCIsImNvbnRhY3RFbWFpbCIsImNvbnRhY3RQaG9uZSIsImNvbnRhY3RBZGRyZXNzIiwic29jaWFsTGlua3MiLCJmYWNlYm9vayIsInlvdXR1YmUiLCJpbnN0YWdyYW0iLCJ0d2l0dGVyIiwic2VvU2V0dGluZ3MiLCJkZWZhdWx0VGl0bGUiLCJkZWZhdWx0RGVzY3JpcHRpb24iLCJrZXl3b3JkcyIsImdvb2dsZUFuYWx5dGljcyIsImdvb2dsZVRhZ01hbmFnZXIiLCJlbWFpbFNldHRpbmdzIiwiZnJvbU5hbWUiLCJmcm9tRW1haWwiLCJyZXBseVRvIiwidGhlbWVTZXR0aW5ncyIsInByaW1hcnlDb2xvciIsInNlY29uZGFyeUNvbG9yIiwiYWNjZW50Q29sb3IiLCJmb250RmFtaWx5IiwiY3JlYXRlRGVmYXVsdFBhZ2VzIiwiaWQiLCJ0aXRsZSIsInNsdWciLCJjb250ZW50IiwiZXhjZXJwdCIsInN0YXR1cyIsInNlb1RpdGxlIiwic2VvRGVzY3JpcHRpb24iLCJhdXRob3IiLCJjcmVhdGVkQXQiLCJEYXRlIiwidG9JU09TdHJpbmciLCJ1cGRhdGVkQXQiLCJwYWdlVHlwZSIsImNhdGVnb3JpZXMiLCJ0YWdzIiwibm93IiwiY3JlYXRlRGVmYXVsdE1lZGlhIiwiZmlsZW5hbWUiLCJvcmlnaW5hbE5hbWUiLCJ1cmwiLCJ0eXBlIiwic2l6ZSIsInVwbG9hZGVkQnkiLCJ1cGxvYWRlZEF0IiwiYWx0IiwiY2FwdGlvbiIsImNyZWF0ZURlZmF1bHRNZW51cyIsIm5hbWUiLCJsb2NhdGlvbiIsIml0ZW1zIiwibGFiZWwiLCJvcmRlciIsImNyZWF0ZURlZmF1bHRBbmFseXRpY3MiLCJwYWdlVmlld3MiLCJwb3B1bGFyUGFnZXMiLCJwYWdlSWQiLCJ2aWV3cyIsInJlY2VudEFjdGl2aXR5IiwiYWN0aW9uIiwidGFyZ2V0IiwidXNlciIsInRpbWVzdGFtcCIsInRvdGFsUGFnZXMiLCJ0b3RhbFBvc3RzIiwidG90YWxNZWRpYSIsIlNUT1JBR0VfS0VZUyIsInBhZ2VzIiwibWVkaWEiLCJtZW51cyIsInNldHRpbmdzIiwiYW5hbHl0aWNzIiwiZ2V0RnJvbVN0b3JhZ2UiLCJrZXkiLCJkZWZhdWx0VmFsdWUiLCJpdGVtIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsIkpTT04iLCJwYXJzZSIsInNldFRvU3RvcmFnZSIsInZhbHVlIiwic2V0SXRlbSIsInN0cmluZ2lmeSIsImluaXRpYWxpemVTdG9yYWdlIiwibW9ja0NNU1NlcnZpY2UiLCJnZXRQYWdlcyIsIlByb21pc2UiLCJyZXNvbHZlIiwic2V0VGltZW91dCIsInN1Y2Nlc3MiLCJkYXRhIiwiY3JlYXRlUGFnZSIsInBhZ2UiLCJuZXdQYWdlIiwiTWF0aCIsInJhbmRvbSIsInRvU3RyaW5nIiwic3Vic3RyIiwicHVzaCIsInVwZGF0ZVBhZ2UiLCJ1cGRhdGVzIiwicGFnZUluZGV4IiwiZmluZEluZGV4IiwicCIsIkVycm9yIiwiZGVsZXRlUGFnZSIsImZpbHRlcmVkUGFnZXMiLCJmaWx0ZXIiLCJtZXNzYWdlIiwiZ2V0TWVkaWEiLCJ1cGxvYWRNZWRpYSIsImZpbGUiLCJuZXdNZWRpYSIsInN0YXJ0c1dpdGgiLCJkZWxldGVNZWRpYSIsImZpbHRlcmVkTWVkaWEiLCJtIiwiZ2V0TWVudXMiLCJjcmVhdGVNZW51IiwibWVudSIsIm5ld01lbnUiLCJ1cGRhdGVNZW51IiwibWVudUluZGV4IiwiZGVsZXRlTWVudSIsImZpbHRlcmVkTWVudXMiLCJnZXRTZXR0aW5ncyIsInVwZGF0ZVNldHRpbmdzIiwiY3VycmVudFNldHRpbmdzIiwidXBkYXRlZFNldHRpbmdzIiwiZ2V0QW5hbHl0aWNzIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/utils/mockCMSService.ts\n"));

/***/ })

}]);